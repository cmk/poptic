cabal-version: >= 1.10

name:           profunctor-optics
version:        0.0.0.1
synopsis:       An optics library compatible with the typeclasses in 'profunctors'.
description:  
  This package provides utilities for creating and manipulating profunctor-based optics. Some highlights:
  .
  Full complement of isos, re/prisms, re/lenses, grates, co/traversals (affine, regular, and non-empty), co/folds (affine, regular, and non-empty), re/views, and re/setters.
  .
  Composable indexed and co-indexed variants of all of the above.
  .
  Compact & straight-forward implementation. No inscrutable internal modules, lawless or otherwise ancillary typeclasses, or heavy type-level machinery. The language extensions doing the majority of the work are `RankNTypes` and `QuantifiedConstraints`.
  .
  Fully interoperable. All that is required to create optics (standard, idexable, or co-indexable) is the `profunctors` package, which is heavily used and likely to end up in `base` at some point. Optics compose with `(.)` from `Prelude` as is typical. If you want to provide profunctor optics for your own types in your own libraries, you can do so without incurring a dependency on this package. Conversions to & from the Van Laarhoven representations are provided for each optic type.
  .
  Well-documented properties and exportable predicates for testing your own optics.
  .
  See the <https://github.com/cmk/profunctor-extras/blob/master/profunctor-optics/README.md Readme> file for more information. 

category:       Data, Lenses
homepage:       https://github.com/cmk/profunctor-extras
bug-reports:    https://github.com/cmk/profunctor-extras/issues
author:         Chris McKinlay
maintainer:     Chris McKinlay
copyright:      2019 Chris McKinlay
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:  ChangeLog.md

source-repository head
  type: git
  location: https://github.com/cmk/profunctor-extras

library
  exposed-modules:
      Control.Exception.Optic
      Control.Monad.State.Optic

      Data.Connection.Optic
      Data.Connection.Optic.Int
      Data.Connection.Optic.Word
      Data.Connection.Optic.Float

      Data.Profunctor.Optic
      Data.Profunctor.Optic.Type
      Data.Profunctor.Optic.Iso
      Data.Profunctor.Optic.View
      Data.Profunctor.Optic.Setter
      Data.Profunctor.Optic.Lens
      Data.Profunctor.Optic.Prism
      Data.Profunctor.Optic.Grate
      Data.Profunctor.Optic.Fold
      Data.Profunctor.Optic.Repn
      Data.Profunctor.Optic.Traversal
      Data.Profunctor.Optic.Operator
      Data.Profunctor.Optic.Property
      Data.Profunctor.Optic.Indexed

  other-modules: Data.Profunctor.Optic.Import

  default-language: Haskell2010

  hs-source-dirs:
      src
  default-extensions: 
      ConstraintKinds
      RankNTypes 
      MultiParamTypeClasses 
      OverloadedStrings 
      FlexibleContexts
      FlexibleInstances 
      ExistentialQuantification
      NoImplicitPrelude
      QuantifiedConstraints
      ScopedTypeVariables
      TupleSections
      TypeOperators
      TypeApplications
      TypeFamilies

  ghc-options: -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates
  build-depends:
      base >=4.9 && <5.0
    , comonad
    , connections
    , distributive
    , ilist
    , mtl
    , newtype-generics
    , profunctor-arrows
    , profunctors
    , rings
    , semigroupoids
    , tagged
    , unliftio-core
    , transformers

test-suite doctests
  type:              exitcode-stdio-1.0
  main-is:           doctests.hs
  ghc-options:       -Wall -threaded
  hs-source-dirs:    test
  default-language:  Haskell2010
  x-doctest-options: --fast

  build-depends:
      base
    , containers
    , doctest >= 0.8
    , mtl
    , profunctor-optics

  default-extensions: 
      ConstraintKinds
      RankNTypes 
      MultiParamTypeClasses 
      OverloadedStrings 
      FlexibleContexts
      FlexibleInstances 
      ExistentialQuantification
      QuantifiedConstraints
      ScopedTypeVariables
      TupleSections
      TypeOperators
      TypeApplications
      TypeFamilies
